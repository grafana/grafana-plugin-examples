name: Merge Changes
description: Open PR with changes and merge it if all tests are passed
inputs:
  target-branch:
    description: Target branch for the changes to be merged into
    required: true
    default: ${{ github.event.repository.default_branch }}  
  current-branch:
    description: Current branch
    required: false
    default: automatic-plugin-examples-update
  commit-message:
    description: Commit message
    required: true
    default: Commit changes from CI
  app-id:
    description: GitHub App ID
    required: true
  app-pem:
    description: GitHub App PEM
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up Git configuration
      shell: bash
      run: |
        git config user.name 'grafana-delivery-bot[bot]'
        git config user.email '132647405+grafana-delivery-bot[bot]@users.noreply.github.com'

    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v2
      with:
        app_id: "${{ inputs.app-id }}"
        private_key: "${{ inputs.app-pem }}"

    - name: Create a branch
      shell: bash
      run: git checkout --progress -B ${{ inputs.current-branch }}

    - name: Commit changes
      shell: bash
      run: |
        git add --all -- .
        git commit -m "${{ inputs.commit-message }}"
        git show --stat
      
    - name: Push changes
      shell: bash
      run: git push origin ${{ inputs.current-branch }} --force-with-lease

    - name: Create a pull request
      shell: bash
      run: gh pr create --base ${{ inputs.target-branch }} --head ${{ inputs.current-branch }} --title "Automatic update for plugin examples" --body "This PR was created by the GitHub Action, it updates grafana-plugin-examples repo"
      env:
        GH_TOKEN: ${{ steps.generate_token.outputs.token }}

    - name: Clean up
      if: ${{ !cancelled() }}
      shell: bash
      run: git push origin --delete ${{ inputs.current-branch }}


