name: Update plugin examples from create-plugin

on:
  schedule:
    - cron: "0 0 * * 0" # Run weekly (every Sunday at midnight UTC)
  workflow_dispatch: # Enable manual trigger
  repository_dispatch: # Enable external trigger
  push:
    branches:
      - academo/scaffold-basic-examples

jobs:
  generate-new-examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        examples: ['panel-basic', 'datasource-basic', 'app-basic', 'datasource-backend', 'app-backend']
        include:
          - examples: panel-basic
            plugin-name: basic
            plugin-org: grafana
            plugin-type: panel
            has-backend: false
            artifact-name: basic-panel
          - examples: datasource-basic
            plugin-name: basic
            plugin-org: grafana
            plugin-type: datasource
            has-backend: false
            artifact-name: basic-datasource
          - examples: app-basic
            plugin-name: basicscaffold
            plugin-org: grafana
            plugin-type: app
            has-backend: false
            artifact-name: basic-app
          - examples: datasource-backend
            plugin-name: backendscaffold
            plugin-org: grafana
            plugin-type: datasource
            has-backend: true
            artifact-name: backend-datasource
          - examples: app-backend
            plugin-name: backendscaffold
            plugin-org: grafana
            plugin-type: app
            has-backend: true
            artifact-name: backend-app
    steps:
      - name: Setup nodejs 22
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22

      - name: Run create plugin
        id: generate
        shell: bash
        run: |
          CMD_ARGS="--plugin-name=${PLUGIN_NAME} --org-name=${PLUGIN_ORG} --plugin-type=${PLUGIN_TYPE}"
          # based on has-backend pass --backend or --no-backend
          if [ "${HAS_BACKEND}" = "true" ]; then
            CMD_ARGS="$CMD_ARGS --backend"
          else
            CMD_ARGS="$CMD_ARGS --no-backend"
          fi
          npx -y @grafana/create-plugin@latest $(echo $CMD_ARGS)
          DIR_NAME="$PLUGIN_ORG-$PLUGIN_NAME-$PLUGIN_TYPE"
          echo "plugin-dir=$DIR_NAME" >> $GITHUB_OUTPUT
          echo "Plugin Generated at $DIR_NAME"
        env:
          PLUGIN_NAME: ${{ matrix.plugin-name }}
          PLUGIN_ORG: ${{ matrix.plugin-org }}
          PLUGIN_TYPE: ${{ matrix.plugin-type }}
          HAS_BACKEND: ${{ matrix.has-backend }}

      - name: Setup Go environment
        if: matrix.has-backend == 'true'
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: './${{ steps.generate.outputs.plugin-dir }}/go.mod'

      - name: Build backend
        if: matrix.has-backend == 'true'
        uses: magefile/mage-action@6f50bbb8ea47d56e62dee92392788acbc8192d0b # v3.1.0
        with:
          version: latest
          args: build:linux
          workdir: ${{ steps.generate.outputs.plugin-dir }}

      - name: Build plugin frontend
        id: build
        shell: bash
        run: |
          npm install
          npm run build
        working-directory: ${{ steps.generate.outputs.plugin-dir }}

      - name: Clean up
        shell: bash
        run: |
          rm -rf node_modules
          rm -rf dist
        working-directory: ${{ steps.generate.outputs.plugin-dir }}



      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.artifact-name}}
          path: ./${{steps.generate.outputs.plugin-dir}}
          if-no-files-found: error
          overwrite: true
          include-hidden-files: true


  update-examples:
    runs-on: ubuntu-latest
    needs: generate-new-examples
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: ls examples
        shell: bash
        run: |
          ls examples


      - name: Download basic-panel
        uses: actions/download-artifact@v4
        with:
          name: basic-panel
          path: ./basic-panel

      - name: Download basic-datasource
        uses: actions/download-artifact@v4
        with:
          name: basic-datasource
          path: ./basic-datasource

      - name: Download basic-app
        uses: actions/download-artifact@v4
        with:
          name: basic-app
          path: ./basic-app

      - name: Download backend-datasource
        uses: actions/download-artifact@v4
        with:
          name: backend-datasource
          path: ./backend-datasource

      - name: Download backend-app
        uses: actions/download-artifact@v4
        with:
          name: backend-app
          path: ./backend-app

      - name: Remove existing examples
        shell: bash
        run: |
          pushd examples
          rm -rf basic-panel basic-datasource basic-app backend-datasource backend-app
          popd

      - name: Move new examples
        shell: bash
        run: |
          mv basic-panel examples/basic-panel
          mv basic-datasource examples/basic-datasource
          mv basic-app examples/basic-app
          mv backend-datasource examples/backend-datasource
          mv backend-app examples/backend-app

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          title: "Chore: Update plugin examples to latest version"
          commit-message: "Automated update to latest version"
          body: |
            This is an auto-generated PR
            
            It updates all the examples based on the latest version of create-plugin.
          branch: update-plugin-examples
          delete-branch: true
          # base: main

